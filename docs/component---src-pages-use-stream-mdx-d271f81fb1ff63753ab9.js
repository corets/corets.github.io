(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{IrPz:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return d}));var a=n("Fcif"),r=n("+I+c"),s=(n("mXGw"),n("/FXl")),c=n("BIGe"),i=(n("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/pages/use-stream.mdx"}});var o={_frontmatter:i},m=c.a;function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(s.b)(m,Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"use-stream"},"Use Stream"),Object(s.b)("p",null,"This package is built on top of ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"/use-async"}),"@corets/use-async"),". It adds support for repeating async operations - streams. Since ",Object(s.b)("inlineCode",{parentName:"p"},"useAsync")," is used under the hood, you'll have access to the same methods as ",Object(s.b)("inlineCode",{parentName:"p"},"cancel()"),", ",Object(s.b)("inlineCode",{parentName:"p"},"refresh()"),", etc."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn add @corets/use-stream\n")),Object(s.b)("h2",{id:"usestream"},Object(s.b)("inlineCode",{parentName:"h2"},"useStream")),Object(s.b)("p",null,"Create a repeating, async operation."),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'import React, { useState } from "react"\nimport { useStream } from "@corets/use-stream"\n\nconst fetchDateTime = async () => new Date().toTimeString()\n\nconst Example = () => {\n  const dateStream = useStream(fetchDateTime, 1000)\n  const handleCancel = () => dateStream.cancel()\n  const handleResume = () => dateStream.refresh()\n\n  return (\n    <div>\n      Current date time is: { dateStream.result }\n\n      {dateStream.isLoading && (\n        <div>Loading for the first time</div>\n      )}\n\n      {!dateStream.isLoading && dateStream.isRefreshing && (\n        <div>Refreshing data</div>\n      )}\n\n      <div>\n        {dateStream.isCancelled ? <button onClick={handleResume}>Resume</button> : <button onClick={handleCancel}>Cancel</button>}\n      </div>\n    </div>\n  )\n}\n')))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/pages/use-stream.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-use-stream-mdx-d271f81fb1ff63753ab9.js.map